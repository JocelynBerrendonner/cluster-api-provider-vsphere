openapi: 3.0.0
info:
  contact:
    email: support@haproxy.com
    name: HAProxy Support
    url: https://my.haproxy.com/portal/cust/login
  description: |-
    API for editing and managing haproxy instances. Provides process information, configuration management,
    haproxy stats and logs.

    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->
  title: HAProxy Data Plane API
  version: "1.2"
externalDocs:
  description: HAProxy Documentation
  url: https://cbonte.github.io/haproxy-dconv/
servers:
- url: /v1
security:
- basic_auth: []
tags:
- description: API autodiscover endpoints
  name: Discovery
- name: Information
- name: Specification
- description: |
    Managing transactions. Configuration changes can be grouped in the transaction. You start the
    transaction with trasactions POST, and call the configuration changes you need with parameter
    transaction_id. When you want to commit the transaction, you call the transactions PUT and all changes
    in that transaction is commited. If you call a configuration change without the transaction_id,
    transaction mechanism is implicitly called with one operation in transaction.
  name: Transactions
- description: |
    Checking reload success. To avoid constant reloading we reload in intervals that are configurable when
    with reload-delay option. When a change to configuration is made and force_reload url query string
    parameter is false we issue a request for reload, and return the reload ID in response header. You can
    then use reloads endpoints to check the status of that reload ID. If force_reload is true, we override all
    of this and reload immediately.
  name: Reloads
- description: |
    Managing sites (simple configuration mode). Sites are considered as one frontend with multiple backends
    connected to it via default_backend or use-backend directives.
  name: Sites
- description: Stats container
  name: Stats
- description: Managing global configuration (advanced mode)
  name: Global
- description: Managing defaults configuration (advanced mode)
  name: Defaults
- description: Managing frontend configuration (advanced mode)
  name: Frontend
- description: Managing backend configurations (advanced mode)
  name: Backend
- description: Managing frontend bind configurations (advanced mode)
  name: Bind
- description: Managing backend server configurations (advanced mode)
  name: Server
- description: Various frontend options (advanced mode)
  name: Frontend options
- description: Various backend options (advanced mode)
  name: Backend options
- description: Raw HAProxy configuration management (advanced mode)
  name: Configuration
- description: Managing advanced haproxy configuration (advanced mode)
  name: HAProxy configuration management
- name: TCPRequestRule
- name: HTTPRequestRule
- name: HTTPResponseRule
- name: BackendSwitchingRule
- name: ServerSwitchingRule
- name: TCPResponseRule
- name: Filter
- name: StickRule
- name: LogTarget
- name: ACL
paths:
  /:
    get:
      description: Returns a list of root endpoints.
      operationId: getAPIEndpoints
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpoints'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return list of root endpoints
      tags:
      - Discovery
  /specification:
    get:
      description: Return Data Plane API OpenAPI specification
      operationId: getSpecification
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Data Plane API Specification
      tags:
      - Specification
  /info:
    get:
      description: Return API, hardware and OS information
      operationId: getInfo
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/info'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return API, hardware and OS information
      tags:
      - Information
  /services:
    get:
      description: Returns a list of API managed services endpoints.
      operationId: getServicesEndpoints
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpoints'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return list of service endpoints
      tags:
      - Discovery
  /services/haproxy:
    get:
      description: Returns a list of HAProxy related endpoints.
      operationId: getHaproxyEndpoints
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpoints'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return list of HAProxy related endpoints
      tags:
      - Discovery
  /services/haproxy/info:
    get:
      description: Return HAProxy process information
      operationId: getHaproxyProcessInfo
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/process_info'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return HAProxy process information
      tags:
      - Information
  /services/haproxy/sites:
    get:
      description: Returns an array of all configured sites.
      operationId: getSites
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of sites
      tags:
      - Sites
    post:
      description: Adds a new site to the configuration file.
      operationId: createSite
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/site'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site'
          description: Site created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a site
      tags:
      - Sites
  /services/haproxy/sites/{name}:
    delete:
      description: Deletes a site from the configuration by it's name.
      operationId: deleteSite
      parameters:
      - description: Site frontend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Site deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a site
      tags:
      - Sites
    get:
      description: Returns one site configuration by it's name.
      operationId: getSite
      parameters:
      - description: Site frontend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return a site
      tags:
      - Sites
    put:
      description: Replaces a site configuration by it's name.
      operationId: replaceSite
      parameters:
      - description: Site frontend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/site'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site'
          description: Site replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a site
      tags:
      - Sites
  /services/haproxy/stats:
    get:
      description: Returns a list of HAProxy stats endpoints.
      operationId: getStatsEndpoints
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpoints'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return list of HAProxy stats endpoints
      tags:
      - Discovery
  /services/haproxy/stats/native:
    get:
      description: Getting stats from the HAProxy.
      operationId: getStats
      parameters:
      - description: Object type to get stats for (one of frontend, backend, server)
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - frontend
          - backend
          - server
          type: string
        style: form
      - description: Object name to get stats for
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Object parent name to get stats for, in case the object is a
          server
        explode: true
        in: query
        name: parent
        required: false
        schema:
          type: string
        style: form
        x-dependency:
          query.type: server
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/native_stats'
          description: Success
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/native_stats'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Gets stats
      tags:
      - Stats
  /services/haproxy/transactions:
    get:
      description: Returns a list of HAProxy configuration transactions. Transactions
        can be filtered by their status.
      operationId: getTransactions
      parameters:
      - description: Filter by transaction status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - failed
          - in_progress
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return list of HAProxy configuration transactions.
      tags:
      - Transactions
    post:
      description: Starts a new transaction and returns it's id
      operationId: startTransaction
      parameters:
      - description: Configuration version on which to work on
        explode: true
        in: query
        name: version
        required: true
        schema:
          type: integer
        style: form
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
          description: Transaction started
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Start a new transaction
      tags:
      - Transactions
  /services/haproxy/transactions/{id}:
    delete:
      description: Deletes a transaction.
      operationId: deleteTransaction
      parameters:
      - description: Transaction id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: Transaction deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a transaction
      tags:
      - Transactions
    get:
      description: Returns one HAProxy configuration transactions.
      operationId: getTransaction
      parameters:
      - description: Transaction id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
          description: Successful operation
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one HAProxy configuration transactions
      tags:
      - Transactions
    put:
      description: Commit transaction, execute all operations in transaction and return
        msg
      operationId: commitTransaction
      parameters:
      - description: Transaction id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
          description: Transaction succesfully commited
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Commit transaction
      tags:
      - Transactions
  /services/haproxy/reloads:
    get:
      description: Returns a list of HAProxy reloads.
      operationId: getReloads
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reloads'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return list of HAProxy Reloads.
      tags:
      - Reloads
  /services/haproxy/reloads/{id}:
    get:
      description: Returns one HAProxy reload status.
      operationId: getReload
      parameters:
      - description: Reload id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d{4}-\d{2}-\d{2}-\d+$
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reload'
          description: Successful operation
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one HAProxy reload status
      tags:
      - Reloads
  /services/haproxy/configuration:
    get:
      description: Returns a list of endpoints to be used for advanced configuration
        of HAProxy objects.
      operationId: getConfigurationEndpoints
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpoints'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return list of HAProxy advanced configuration endpoints
      tags:
      - Discovery
  /services/haproxy/configuration/global:
    get:
      description: Returns global part of configuration.
      operationId: getGlobal
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return a global part of configuration
      tags:
      - Global
      - HAProxy configuration management
    put:
      description: Replace global part of config
      operationId: replaceGlobal
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/global'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/global'
          description: Global replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/global'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace global
      tags:
      - Global
      - HAProxy configuration management
  /services/haproxy/configuration/defaults:
    get:
      description: Returns defaults part of configuration.
      operationId: getDefaults
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return defaults part of configuration
      tags:
      - Defaults
      - HAProxy configuration management
    put:
      description: Replace defaults part of config
      operationId: replaceDefaults
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaults'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaults'
          description: Defaults replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaults'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace defaults
      tags:
      - Defaults
      - HAProxy configuration management
  /services/haproxy/configuration/frontends:
    get:
      description: Returns an array of all configured frontends.
      operationId: getFrontends
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of frontends
      tags:
      - Frontend
      - HAProxy configuration management
    post:
      description: Adds a new frontend to the configuration file.
      operationId: createFrontend
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/frontend'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/frontend'
          description: Frontend created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/frontend'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a frontend
      tags:
      - Frontend
      - HAProxy configuration management
  /services/haproxy/configuration/frontends/{name}:
    delete:
      description: Deletes a frontend from the configuration by it's name.
      operationId: deleteFrontend
      parameters:
      - description: Frontend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Frontend deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a frontend
      tags:
      - Frontend
      - HAProxy configuration management
    get:
      description: Returns one frontend configuration by it's name.
      operationId: getFrontend
      parameters:
      - description: Frontend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return a frontend
      tags:
      - Frontend
      - HAProxy configuration management
    put:
      description: Replaces a frontend configuration by it's name.
      operationId: replaceFrontend
      parameters:
      - description: Frontend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/frontend'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/frontend'
          description: Frontend replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/frontend'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a frontend
      tags:
      - Frontend
      - HAProxy configuration management
  /services/haproxy/configuration/backends:
    get:
      description: Returns an array of all configured backends.
      operationId: getBackends
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of backends
      tags:
      - Backend
      - HAProxy configuration management
    post:
      description: Adds a new backend to the configuration file.
      operationId: createBackend
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/backend'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend'
          description: Backend created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a backend
      tags:
      - Backend
      - HAProxy configuration management
  /services/haproxy/configuration/backends/{name}:
    delete:
      description: Deletes a frontend from the configuration by it's name.
      operationId: deleteBackend
      parameters:
      - description: Backend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Backend deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a backend
      tags:
      - Backend
      - HAProxy configuration management
    get:
      description: Returns one backend configuration by it's name.
      operationId: getBackend
      parameters:
      - description: Backend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return a backend
      tags:
      - Backend
      - HAProxy configuration management
    put:
      description: Replaces a backend configuration by it's name.
      operationId: replaceBackend
      parameters:
      - description: Backend name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/backend'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend'
          description: Backend replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a backend
      tags:
      - Backend
      - HAProxy configuration management
  /services/haproxy/configuration/binds:
    get:
      description: Returns an array of all binds that are configured in specified
        frontend.
      operationId: getBinds
      parameters:
      - description: Parent frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of binds
      tags:
      - Bind
      - HAProxy configuration management
      - Frontend options
    post:
      description: Adds a new bind in the specified frontend in the configuration
        file.
      operationId: createBind
      parameters:
      - description: Parent frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/bind'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bind'
          description: Bind created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bind'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new bind
      tags:
      - Bind
      - HAProxy configuration management
      - Frontend options
  /services/haproxy/configuration/binds/{name}:
    delete:
      description: Deletes a bind configuration by it's name in the specified frontend.
      operationId: deleteBind
      parameters:
      - description: Bind name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Parent frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Bind deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a bind
      tags:
      - Bind
      - HAProxy configuration management
      - Frontend options
    get:
      description: Returns one bind configuration by it's name in the specified frontend.
      operationId: getBind
      parameters:
      - description: Bind name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Parent frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one bind
      tags:
      - Bind
      - HAProxy configuration management
      - Frontend options
    put:
      description: Replaces a bind configuration by it's name in the specified frontend.
      operationId: replaceBind
      parameters:
      - description: Bind name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Parent frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/bind'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bind'
          description: Bind replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bind'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a bind
      tags:
      - Bind
      - HAProxy configuration management
      - Frontend options
  /services/haproxy/configuration/servers:
    get:
      description: Returns an array of all servers that are configured in specified
        backend.
      operationId: getServers
      parameters:
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of servers
      tags:
      - Server
      - HAProxy configuration management
      - Backend options
    post:
      description: Adds a new server in the specified backend in the configuration
        file.
      operationId: createServer
      parameters:
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/server'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
          description: Server created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new server
      tags:
      - Server
      - HAProxy configuration management
      - Backend options
  /services/haproxy/configuration/servers/{name}:
    delete:
      description: Deletes a server configuration by it's name in the specified backend.
      operationId: deleteServer
      parameters:
      - description: Server name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Server deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a server
      tags:
      - Server
      - HAProxy configuration management
      - Backend options
    get:
      description: Returns one server configuration by it's name in the specified
        backend.
      operationId: getServer
      parameters:
      - description: Server name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one server
      tags:
      - Server
      - HAProxy configuration management
      - Backend options
    put:
      description: Replaces a server configuration by it's name in the specified backend.
      operationId: replaceServer
      parameters:
      - description: Server name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/server'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
          description: Server replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a server
      tags:
      - Server
      - HAProxy configuration management
      - Backend options
  /services/haproxy/configuration/http_request_rules:
    get:
      description: Returns all HTTP Request Rules that are configured in specified
        parent.
      operationId: getHTTPRequestRules
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all HTTP Request Rules
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPRequestRule
    post:
      description: Adds a new HTTP Request Rule of the specified type in the specified
        parent.
      operationId: createHTTPRequestRule
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/http_request_rule'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http_request_rule'
          description: HTTP Request Rule created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http_request_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new HTTP Request Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPRequestRule
  /services/haproxy/configuration/http_request_rules/{id}:
    delete:
      description: Deletes a HTTP Request Rule configuration by it's ID from the specified
        parent.
      operationId: deleteHTTPRequestRule
      parameters:
      - description: HTTP Request Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: HTTP Request Rule deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a HTTP Request Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPRequestRule
    get:
      description: Returns one HTTP Request Rule configuration by it's ID in the specified
        parent.
      operationId: getHTTPRequestRule
      parameters:
      - description: HTTP Request Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one HTTP Request Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPRequestRule
    put:
      description: Replaces a HTTP Request Rule configuration by it's ID in the specified
        parent.
      operationId: replaceHTTPRequestRule
      parameters:
      - description: HTTP Request Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/http_request_rule'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http_request_rule'
          description: HTTP Request Rule replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http_request_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a HTTP Request Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPRequestRule
  /services/haproxy/configuration/http_response_rules:
    get:
      description: Returns all HTTP Response Rules that are configured in specified
        parent.
      operationId: getHTTPResponseRules
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all HTTP Response Rules
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPResponseRule
    post:
      description: Adds a new HTTP Response Rule of the specified type in the specified
        parent.
      operationId: createHTTPResponseRule
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/http_response_rule'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http_response_rule'
          description: HTTP Response Rule created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http_response_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new HTTP Response Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPResponseRule
  /services/haproxy/configuration/http_response_rules/{id}:
    delete:
      description: Deletes a HTTP Response Rule configuration by it's ID from the
        specified parent.
      operationId: deleteHTTPResponseRule
      parameters:
      - description: HTTP Response Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: HTTP Response Rule deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a HTTP Response Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPResponseRule
    get:
      description: Returns one HTTP Response Rule configuration by it's ID in the
        specified parent.
      operationId: getHTTPResponseRule
      parameters:
      - description: HTTP Response Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one HTTP Response Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPResponseRule
    put:
      description: Replaces a HTTP Response Rule configuration by it's ID in the specified
        parent.
      operationId: replaceHTTPResponseRule
      parameters:
      - description: HTTP Response Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/http_response_rule'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http_response_rule'
          description: HTTP Response Rule replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http_response_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a HTTP Response Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - HTTPResponseRule
  /services/haproxy/configuration/tcp_request_rules:
    get:
      description: Returns all TCP Request Rules that are configured in specified
        parent and parent type.
      operationId: getTCPRequestRules
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all TCP Request Rules
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPRequestRule
    post:
      description: Adds a new TCP Request Rule of the specified type in the specified
        parent.
      operationId: createTCPRequestRule
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/tcp_request_rule'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcp_request_rule'
          description: TCP Request Rule created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcp_request_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new TCP Request Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPRequestRule
  /services/haproxy/configuration/tcp_request_rules/{id}:
    delete:
      description: Deletes a TCP Request Rule configuration by it's ID from the specified
        parent.
      operationId: deleteTCPRequestRule
      parameters:
      - description: TCP Request Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: TCP Request Rule deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a TCP Request Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPRequestRule
    get:
      description: Returns one TCP Request Rule configuration by it's ID in the specified
        parent.
      operationId: getTCPRequestRule
      parameters:
      - description: TCP Request Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one TCP Request Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPRequestRule
    put:
      description: Replaces a TCP Request Rule configuration by it's ID in the specified
        parent.
      operationId: replaceTCPRequestRule
      parameters:
      - description: TCP Request Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/tcp_request_rule'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcp_request_rule'
          description: TCP Request Rule replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcp_request_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a TCP Request Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPRequestRule
  /services/haproxy/configuration/tcp_response_rules:
    get:
      description: Returns all TCP Response Rules that are configured in specified
        backend.
      operationId: getTCPResponseRules
      parameters:
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all TCP Response Rules
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPResponseRule
    post:
      description: Adds a new TCP Response Rule of the specified type in the specified
        backend.
      operationId: createTCPResponseRule
      parameters:
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/tcp_response_rule'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcp_response_rule'
          description: TCP Response Rule created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcp_response_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new TCP Response Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPResponseRule
  /services/haproxy/configuration/tcp_response_rules/{id}:
    delete:
      description: Deletes a TCP Response Rule configuration by it's ID from the specified
        backend.
      operationId: deleteTCPResponseRule
      parameters:
      - description: TCP Response Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: TCP Response Rule deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a TCP Response Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPResponseRule
    get:
      description: Returns one TCP Response Rule configuration by it's ID in the specified
        backend.
      operationId: getTCPResponseRule
      parameters:
      - description: TCP Response Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one TCP Response Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPResponseRule
    put:
      description: Replaces a TCP Response Rule configuration by it's ID in the specified
        backend.
      operationId: replaceTCPResponseRule
      parameters:
      - description: TCP Response Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/tcp_response_rule'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcp_response_rule'
          description: TCP Response Rule replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcp_response_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a TCP Response Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - TCPResponseRule
  /services/haproxy/configuration/backend_switching_rules:
    get:
      description: Returns all Backend Switching Rules that are configured in specified
        frontend.
      operationId: getBackendSwitchingRules
      parameters:
      - description: Frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all Backend Switching Rules
      tags:
      - HAProxy configuration management
      - Frontend options
      - BackendSwitchingRule
    post:
      description: Adds a new Backend Switching Rule of the specified type in the
        specified frontend.
      operationId: createBackendSwitchingRule
      parameters:
      - description: Frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/backend_switching_rule'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_switching_rule'
          description: Backend Switching Rule created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_switching_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new Backend Switching Rule
      tags:
      - HAProxy configuration management
      - Frontend options
      - BackendSwitchingRule
  /services/haproxy/configuration/backend_switching_rules/{id}:
    delete:
      description: Deletes a Backend Switching Rule configuration by it's ID from
        the specified frontend.
      operationId: deleteBackendSwitchingRule
      parameters:
      - description: Switching Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Backend Switching Rule deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a Backend Switching Rule
      tags:
      - HAProxy configuration management
      - Frontend options
      - BackendSwitchingRule
    get:
      description: Returns one Backend Switching Rule configuration by it's ID in
        the specified frontend.
      operationId: getBackendSwitchingRule
      parameters:
      - description: Switching Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one Backend Switching Rule
      tags:
      - HAProxy configuration management
      - Frontend options
      - BackendSwitchingRule
    put:
      description: Replaces a Backend Switching Rule configuration by it's ID in the
        specified frontend.
      operationId: replaceBackendSwitchingRule
      parameters:
      - description: Switching Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Frontend name
        explode: true
        in: query
        name: frontend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/backend_switching_rule'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_switching_rule'
          description: Backend Switching Rule replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_switching_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a Backend Switching Rule
      tags:
      - HAProxy configuration management
      - Frontend options
      - BackendSwitchingRule
  /services/haproxy/configuration/server_switching_rules:
    get:
      description: Returns all Backend Switching Rules that are configured in specified
        backend.
      operationId: getServerSwitchingRules
      parameters:
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all Server Switching Rules
      tags:
      - HAProxy configuration management
      - Backend options
      - ServerSwitchingRule
    post:
      description: Adds a new Server Switching Rule of the specified type in the specified
        backend.
      operationId: createServerSwitchingRule
      parameters:
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/server_switching_rule'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server_switching_rule'
          description: Server Switching Rule created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server_switching_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new Server Switching Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - ServerSwitchingRule
  /services/haproxy/configuration/server_switching_rules/{id}:
    delete:
      description: Deletes a Server Switching Rule configuration by it's ID from the
        specified backend.
      operationId: deleteServerSwitchingRule
      parameters:
      - description: Switching Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Server Switching Rule deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a Server Switching Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - ServerSwitchingRule
    get:
      description: Returns one Server Switching Rule configuration by it's ID in the
        specified backend.
      operationId: getServerSwitchingRule
      parameters:
      - description: Switching Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one Server Switching Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - ServerSwitchingRule
    put:
      description: Replaces a Server Switching Rule configuration by it's ID in the
        specified backend.
      operationId: replaceServerSwitchingRule
      parameters:
      - description: Switching Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/server_switching_rule'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server_switching_rule'
          description: Server Switching Rule replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server_switching_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a Server Switching Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - ServerSwitchingRule
  /services/haproxy/configuration/filters:
    get:
      description: Returns all Filters that are configured in specified parent.
      operationId: getFilters
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all Filters
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - Filter
    post:
      description: Adds a new Filter of the specified type in the specified parent.
      operationId: createFilter
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/filter'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter'
          description: Filter created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new Filter
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - Filter
  /services/haproxy/configuration/filters/{id}:
    delete:
      description: Deletes a Filter configuration by it's ID from the specified parent.
      operationId: deleteFilter
      parameters:
      - description: Filter ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Filter deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a Filter
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - Filter
    get:
      description: Returns one Filter configuration by it's ID in the specified parent.
      operationId: getFilter
      parameters:
      - description: Filter ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one Filter
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - Filter
    put:
      description: Replaces a Filter configuration by it's ID in the specified parent.
      operationId: replaceFilter
      parameters:
      - description: Filter ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/filter'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter'
          description: Filter replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a Filter
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - Filter
  /services/haproxy/configuration/stick_rules:
    get:
      description: Returns all Stick Rules that are configured in specified backend.
      operationId: getStickRules
      parameters:
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all Stick Rules
      tags:
      - HAProxy configuration management
      - Backend options
      - StickRule
    post:
      description: Adds a new Stick Rule of the specified type in the specified backend.
      operationId: createStickRule
      parameters:
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/stick_rule'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stick_rule'
          description: Stick Rule created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stick_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new Stick Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - StickRule
  /services/haproxy/configuration/stick_rules/{id}:
    delete:
      description: Deletes a Stick Rule configuration by it's ID from the specified
        backend.
      operationId: deleteStickRule
      parameters:
      - description: Stick Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Stick Rule deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a Stick Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - StickRule
    get:
      description: Returns one Stick Rule configuration by it's ID in the specified
        backend.
      operationId: getStickRule
      parameters:
      - description: Stick Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one Stick Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - StickRule
    put:
      description: Replaces a Stick Rule configuration by it's ID in the specified
        backend.
      operationId: replaceStickRule
      parameters:
      - description: Stick Rule ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Backend name
        explode: true
        in: query
        name: backend
        required: true
        schema:
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/stick_rule'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stick_rule'
          description: Stick Rule replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stick_rule'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a Stick Rule
      tags:
      - HAProxy configuration management
      - Backend options
      - StickRule
  /services/haproxy/configuration/log_targets:
    get:
      description: Returns all Log Targets that are configured in specified parent.
      operationId: getLogTargets
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all Log Targets
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - LogTarget
    post:
      description: Adds a new Log Target of the specified type in the specified parent.
      operationId: createLogTarget
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/log_target'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/log_target'
          description: Log Target created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/log_target'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new Log Target
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - LogTarget
  /services/haproxy/configuration/log_targets/{id}:
    delete:
      description: Deletes a Log Target configuration by it's ID from the specified
        parent.
      operationId: deleteLogTarget
      parameters:
      - description: Log Target ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: Log Target deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a Log Target
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - LogTarget
    get:
      description: Returns one Log Target configuration by it's ID in the specified
        parent.
      operationId: getLogTarget
      parameters:
      - description: Log Target ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one Log Target
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - LogTarget
    put:
      description: Replaces a Log Target configuration by it's ID in the specified
        parent.
      operationId: replaceLogTarget
      parameters:
      - description: Log Target ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/log_target'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/log_target'
          description: Log Target replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/log_target'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a Log Target
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - LogTarget
  /services/haproxy/configuration/acls:
    get:
      description: Returns all ACL lines that are configured in specified parent.
      operationId: getAcls
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return an array of all ACL lines
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - ACL
    post:
      description: Adds a new ACL line of the specified type in the specified parent.
      operationId: createAcl
      parameters:
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/acl'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: ACL line created
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource already exists
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Add a new ACL line
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - ACL
  /services/haproxy/configuration/acls/{id}:
    delete:
      description: Deletes a ACL line configuration by it's ID from the specified
        parent.
      operationId: deleteAcl
      parameters:
      - description: ACL line ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        202:
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        204:
          description: ACL line deleted
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Delete a ACL line
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - ACL
    get:
      description: Returns one ACL line configuration by it's ID in the specified
        parent.
      operationId: getAcl
      parameters:
      - description: ACL line ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return one ACL line
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - ACL
    put:
      description: Replaces a ACL line configuration by it's ID in the specified parent.
      operationId: replaceAcl
      parameters:
      - description: ACL line ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent name
        explode: true
        in: query
        name: parent_name
        required: true
        schema:
          type: string
        style: form
      - description: Parent type
        explode: true
        in: query
        name: parent_type
        required: true
        schema:
          enum:
          - frontend
          - backend
          type: string
        style: form
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/acl'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: ACL line replaced
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The specified resource was not found
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Replace a ACL line
      tags:
      - HAProxy configuration management
      - Backend options
      - Frontend options
      - ACL
  /services/haproxy/configuration/raw:
    get:
      description: Returns HAProxy configuration file in plain text
      operationId: getHAProxyConfiguration
      parameters:
      - description: ID of the transaction where we want to add the operation. Cannot
          be used when version is specified.
        explode: true
        in: query
        name: transaction_id
        required: false
        schema:
          type: string
        style: form
        x-nullable: false
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      responses:
        200:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
          description: Operation successful
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Return HAProxy configuration
      tags:
      - Configuration
      - HAProxy configuration management
    post:
      description: Push a new haproxy configuration file in plain text
      operationId: postHAProxyConfiguration
      parameters:
      - description: Version used for checking configuration version. Cannot be used
          when transaction is specified, transaction has it's own version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
        x-nullable: false
      - description: If set, do a force reload, do not wait for the configured reload-delay.
          Cannot be used when transaction is specified, as changes in transaction
          are not applied directly to configuration.
        explode: true
        in: query
        name: force_reload
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        201:
          content:
            text/plain:
              schema:
                type: string
          description: New HAProxy configuration pushed
        202:
          content:
            text/plain:
              schema:
                type: string
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              explode: false
              schema:
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              explode: false
              schema:
                type: integer
              style: simple
              x-nullable: false
      summary: Push new haproxy configuration
      tags:
      - Configuration
      - HAProxy configuration management
components:
  parameters:
    transaction_id:
      description: ID of the transaction where we want to add the operation. Cannot
        be used when version is specified.
      explode: true
      in: query
      name: transaction_id
      required: false
      schema:
        type: string
      style: form
      x-nullable: false
    version:
      description: Version used for checking configuration version. Cannot be used
        when transaction is specified, transaction has it's own version.
      explode: true
      in: query
      name: version
      required: false
      schema:
        type: integer
      style: form
      x-nullable: false
    force_reload:
      description: If set, do a force reload, do not wait for the configured reload-delay.
        Cannot be used when transaction is specified, as changes in transaction are
        not applied directly to configuration.
      explode: true
      in: query
      name: force_reload
      required: false
      schema:
        default: false
        type: boolean
      style: form
  requestBodies:
    backend:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/backend'
      required: true
    backend_switching_rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/backend_switching_rule'
      required: true
    acl:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/acl'
      required: true
    http_request_rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/http_request_rule'
      required: true
    http_response_rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/http_response_rule'
      required: true
    stick_rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/stick_rule'
      required: true
    tcp_response_rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tcp_response_rule'
      required: true
    site:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/site'
      required: true
    frontend:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/frontend'
      required: true
    bind:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bind'
      required: true
    server:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/server'
      required: true
    tcp_request_rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tcp_request_rule'
      required: true
    server_switching_rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/server_switching_rule'
      required: true
    filter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/filter'
      required: true
    log_target:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/log_target'
      required: true
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: Bad request
      headers:
        Configuration-Version:
          description: Configuration file version
          explode: false
          schema:
            type: integer
          style: simple
          x-nullable: false
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: The specified resource was not found
      headers:
        Configuration-Version:
          description: Configuration file version
          explode: false
          schema:
            type: integer
          style: simple
          x-nullable: false
    AlreadyExists:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: The specified resource already exists
      headers:
        Configuration-Version:
          description: Configuration file version
          explode: false
          schema:
            type: integer
          style: simple
          x-nullable: false
    DefaultError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: General Error
      headers:
        Configuration-Version:
          description: Configuration file version
          explode: false
          schema:
            type: integer
          style: simple
          x-nullable: false
  schemas:
    site:
      additionalProperties: false
      description: "Site configuration. Sites are considered as one service and all\
        \ farms connected to that service.\nFarms are connected to service using use-backend\
        \ and default_backend directives. Sites let you\nconfigure simple HAProxy\
        \ configurations, for more advanced options use /haproxy/configuration \n\
        endpoints.\n"
      example:
        farms:
        - balance:
            algorithm: roundrobin
          mode: http
          name: www_backend
          servers:
          - address: 127.0.1.1
            name: www_server
            port: 4567
            weight: 30
          - address: 127.0.1.2
            name: www_server_new
            port: 4567
            weight: 70
          use_as: default
        name: test_site
        service:
          http_connection_mode: httpclose
          listeners:
          - address: 127.0.0.1
            name: test_listener
            port: 80
          - address: 127.0.0.1
            name: test_listener_2
            port: 8080
          maxconn: 2000
          mode: http
      properties:
        farms:
          items:
            $ref: '#/components/schemas/site_farms'
          type: array
        name:
          nullable: false
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
        service:
          $ref: '#/components/schemas/site_service'
      required:
      - name
      title: Site
      type: object
    sites:
      description: |
        Sites array. Sites are considered as one service and all farms connected to that service.
        Farms are connected to service using use-backend and default_backend directives. Sites let you
        configure simple HAProxy configurations, for more advanced options use /haproxy/configuration
        endpoints.
      items:
        $ref: '#/components/schemas/site'
      title: Sites
      type: array
    global:
      additionalProperties: false
      description: HAProxy global configuration
      example:
        external_check: true
        nbproc: 1
        maxconn: 6
        stats_timeout: 5
        cpu_maps:
        - process: process
          cpu_set: cpu_set
        - process: process
          cpu_set: cpu_set
        daemon: enabled
        pidfile: pidfile
        tune_ssl_default_dh_param: 2
        ssl_default_bind_options: ssl_default_bind_options
        master-worker: true
        runtime_apis:
        - mode: mode
          process: process
          address: address
          level: user
          exposeFdListeners: true
        - mode: mode
          process: process
          address: address
          level: user
          exposeFdListeners: true
        nbthread: 5
        ssl_default_bind_ciphers: ssl_default_bind_ciphers
      properties:
        cpu_maps:
          items:
            $ref: '#/components/schemas/global_cpu_maps'
          type: array
          x-display-name: CPU Maps
          x-go-name: CPUMaps
        daemon:
          enum:
          - enabled
          - disabled
          type: string
        external_check:
          type: boolean
          x-display-name: External Check
        master-worker:
          type: boolean
          x-display-name: Master Worker Mode
        maxconn:
          type: integer
          x-display-name: Max Connections
        nbproc:
          type: integer
          x-display-name: Number of Processes
        nbthread:
          type: integer
          x-display-name: Number of Threads
        pidfile:
          type: string
          x-display-name: PID File
        runtime_apis:
          items:
            $ref: '#/components/schemas/global_runtime_apis'
          type: array
          x-display-name: Runtime APIs
          x-go-name: RuntimeAPIs
        ssl_default_bind_ciphers:
          type: string
          x-display-name: SSL Default Bind Ciphers
        ssl_default_bind_options:
          type: string
          x-display-name: SSL Default Bind Options
        stats_timeout:
          nullable: true
          type: integer
        tune_ssl_default_dh_param:
          type: integer
          x-display-name: SSL Default DH Parameter Size
      title: Global
      type: object
    defaults:
      additionalProperties: false
      description: HAProxy defaults configuration
      example:
        external_check_path: external_check_path
        redispatch:
          interval: 1
          enabled: enabled
        log_format: log_format
        external_check_command: external_check_command
        connect_timeout: 5
        maxconn: 7
        http_request_timeout: 4
        default_backend: default_backend
        httpchk:
          method: HEAD
          uri: uri
          version: version
        mode: tcp
        dontlognull: enabled
        forwardfor:
          ifnone: true
          header: header
          except: except
          enabled: enabled
        log_format_sd: log_format_sd
        balance:
          arguments:
          - arguments
          - arguments
          algorithm: roundrobin
        http-use-htx: enabled
        log_separate_errors: enabled
        clflog: true
        tcplog: true
        client_timeout: 1
        external_check: enabled
        queue_timeout: 1
        clitcpka: enabled
        cookie: cookie
        http_keep_alive_timeout: 2
        default_server:
          fall: 5
          port: 46276
          inter: 2
          rise: 9
        httplog: true
        contstats: enabled
        server_timeout: 6
        http_connection_mode: httpclose
        retries: 1
        http_pretend_keepalive: enabled
        check_timeout: 6
        error_files:
        - code: 3
          file: file
        - code: 3
          file: file
        log_tag: log_tag
        adv_check: ssl-hello-chk
      properties:
        adv_check:
          enum:
          - ssl-hello-chk
          - smtpchk
          - ldap-check
          - mysql-check
          - pgsql-check
          - tcp-check
          - redis-check
          type: string
          x-display-name: Advanced Check
        balance:
          $ref: '#/components/schemas/balance'
        check_timeout:
          nullable: true
          type: integer
        clflog:
          type: boolean
          x-display-name: CLF Log
        client_timeout:
          nullable: true
          type: integer
        clitcpka:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Client TCP Keep Alive
        connect_timeout:
          nullable: true
          type: integer
        contstats:
          enum:
          - enabled
          type: string
          x-display-name: Continous Statistics
        cookie:
          type: string
        default_backend:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-dynamic-enum:
            operation: getBackends
            property: name
        default_server:
          $ref: '#/components/schemas/default_server'
        dontlognull:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Don't Log Null
        error_files:
          items:
            $ref: '#/components/schemas/errorfile'
          type: array
          x-go-name: ErrorFiles
        external_check:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: External Check
        external_check_command:
          pattern: ^[^\s]+$
          type: string
          x-display-name: External Check Command
        external_check_path:
          pattern: ^[^\s]+$
          type: string
          x-display-name: External Check Path
        forwardfor:
          $ref: '#/components/schemas/forwardfor'
        http-use-htx:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: HTTP Use HTX
        http_connection_mode:
          enum:
          - httpclose
          - http-server-close
          - http-keep-alive
          type: string
        http_keep_alive_timeout:
          nullable: true
          type: integer
        http_pretend_keepalive:
          enum:
          - enabled
          - disabled
          type: string
        http_request_timeout:
          nullable: true
          type: integer
        httpchk:
          $ref: '#/components/schemas/httpchk'
        httplog:
          type: boolean
          x-display-name: HTTP Log
        log_format:
          type: string
        log_format_sd:
          type: string
          x-display-name: Log Format SD
        log_separate_errors:
          enum:
          - enabled
          - disabled
          type: string
        log_tag:
          pattern: ^[^\s]+$
          type: string
        maxconn:
          nullable: true
          type: integer
          x-display-name: Max Connections
        mode:
          enum:
          - tcp
          - http
          type: string
        queue_timeout:
          nullable: true
          type: integer
        redispatch:
          $ref: '#/components/schemas/redispatch'
        retries:
          nullable: true
          type: integer
        server_timeout:
          nullable: true
          type: integer
        tcplog:
          type: boolean
          x-display-name: TCP Log
      title: Defaults
      type: object
    frontend:
      additionalProperties: false
      description: HAProxy frontend configuration
      example:
        default_backend: test_backend
        http_connection_mode: http-keep-alive
        maxconn: 2000
        mode: http
        name: test_frontend
      properties:
        clflog:
          type: boolean
          x-dependency:
            mode:
              value: http
          x-display-name: CLF Log
        client_timeout:
          nullable: true
          type: integer
        clitcpka:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            mode:
              value: tcp
          x-display-name: Client TCP Keep Alive
        contstats:
          enum:
          - enabled
          type: string
          x-display-name: Continous Statistics
        default_backend:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-dynamic-enum:
            operation: getBackends
            property: name
        dontlognull:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Don't Log Null
        forwardfor:
          $ref: '#/components/schemas/forwardfor'
        http-use-htx:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            mode:
              value: http
          x-display-name: HTTP Use HTX
        http_connection_mode:
          enum:
          - httpclose
          - http-server-close
          - http-keep-alive
          type: string
          x-dependency:
            mode:
              value: http
        http_keep_alive_timeout:
          nullable: true
          type: integer
          x-dependency:
            mode:
              value: http
        http_request_timeout:
          nullable: true
          type: integer
          x-dependency:
            mode:
              value: http
        httplog:
          type: boolean
          x-dependency:
            mode:
              value: http
          x-display-name: HTTP Log
        log_format:
          type: string
        log_format_sd:
          type: string
          x-display-name: Log Format SD
        log_separate_errors:
          enum:
          - enabled
          - disabled
          type: string
        log_tag:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
        maxconn:
          nullable: true
          type: integer
          x-display-name: Max Connections
        mode:
          enum:
          - http
          - tcp
          type: string
        name:
          nullable: false
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
        tcplog:
          type: boolean
          x-dependency:
            mode:
              value: tcp
          x-display-name: TCP Log
      required:
      - name
      title: Frontend
      type: object
    frontends:
      description: HAProxy frontends array
      items:
        $ref: '#/components/schemas/frontend'
      title: Frontends
      type: array
    backend:
      additionalProperties: false
      description: HAProxy backend configuration
      example:
        balance:
          algorithm: roundrobin
        forwardfor:
          enabled: true
        httpchk:
          method: OPTIONS
          uri: /check
          version: HTTP/1.1
        mode: http
        name: test_backend
      properties:
        adv_check:
          enum:
          - ssl-hello-chk
          - smtpchk
          - ldap-check
          - mysql-check
          - pgsql-check
          - tcp-check
          - redis-check
          type: string
          x-display-name: Advanced Check
        balance:
          $ref: '#/components/schemas/balance'
        check_timeout:
          nullable: true
          type: integer
        connect_timeout:
          nullable: true
          type: integer
        cookie:
          type: string
          x-dependency:
            mode:
              value: http
        default_server:
          $ref: '#/components/schemas/default_server'
        external_check:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: External Check
        external_check_command:
          pattern: ^[^\s]+$
          type: string
          x-display-name: External Check Command
        external_check_path:
          pattern: ^[^\s]+$
          type: string
          x-display-name: External Check Path
        forwardfor:
          $ref: '#/components/schemas/forwardfor'
        hash_type:
          $ref: '#/components/schemas/backend_hash_type'
        http-use-htx:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            mode:
              value: http
        http_connection_mode:
          enum:
          - httpclose
          - http-server-close
          - http-keep-alive
          type: string
          x-dependency:
            mode:
              value: http
        http_keep_alive_timeout:
          nullable: true
          type: integer
          x-dependency:
            mode:
              value: http
        http_pretend_keepalive:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            mode:
              value: http
        http_request_timeout:
          nullable: true
          type: integer
          x-dependency:
            mode:
              value: http
        httpchk:
          $ref: '#/components/schemas/httpchk'
        log_tag:
          pattern: ^[^\s]+$
          type: string
        mode:
          enum:
          - http
          - tcp
          type: string
        name:
          nullable: false
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
        queue_timeout:
          nullable: true
          type: integer
        redispatch:
          $ref: '#/components/schemas/redispatch'
        retries:
          nullable: true
          type: integer
        server_timeout:
          nullable: true
          type: integer
        stick_table:
          $ref: '#/components/schemas/backend_stick_table'
      required:
      - name
      title: Backend
      type: object
    backends:
      description: HAProxy backends array
      items:
        $ref: '#/components/schemas/backend'
      title: Backends
      type: array
    bind:
      additionalProperties: false
      description: HAProxy frontend bind configuration
      example:
        address: 127.0.0.1
        name: http
        port: 80
      properties:
        accept_proxy:
          type: boolean
        address:
          pattern: ^[^\s]+$
          type: string
        alpn:
          pattern: ^[^\s]+$
          type: string
          x-display-name: ALPN Protocols
        name:
          nullable: false
          pattern: ^[^\s]+$
          type: string
        port:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        process:
          pattern: ^[^\s]+$
          type: string
        ssl:
          type: boolean
        ssl_cafile:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: true
          x-display-name: SSL CA File
        ssl_certificate:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: true
        tcp_user_timeout:
          nullable: true
          type: integer
        transparent:
          type: boolean
        v4v6:
          type: boolean
        verify:
          enum:
          - none
          - optional
          - required
          type: string
          x-dependency:
            ssl:
              value: enabled
      required:
      - name
      title: Bind
      type: object
    binds:
      description: HAProxy frontend binds array (corresponds to bind directives)
      items:
        $ref: '#/components/schemas/bind'
      title: Binds
      type: array
    server:
      additionalProperties: false
      description: HAProxy backend server configuration
      example:
        address: 10.1.1.1
        check: enabled
        max-connections: 500
        name: www
        port: 8080
        weight: 80
      properties:
        address:
          nullable: false
          pattern: ^[^\s]+$
          type: string
        backup:
          enum:
          - enabled
          - disabled
          type: string
        check:
          enum:
          - enabled
          - disabled
          type: string
        cookie:
          pattern: ^[^\s]+$
          type: string
        inter:
          nullable: true
          type: integer
        maintenance:
          enum:
          - enabled
          - disabled
          type: string
        maxconn:
          nullable: true
          type: integer
          x-display-name: Max Connections
        name:
          nullable: false
          pattern: ^[^\s]+$
          type: string
        on-error:
          enum:
          - fastinter
          - fail-check
          - sudden-death
          - mark-down
          type: string
        on-marked-down:
          enum:
          - shutdown-sessions
          type: string
        on-marked-up:
          enum:
          - shutdown-backup-sessions
          type: string
        port:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        ssl:
          enum:
          - enabled
          - disabled
          type: string
        ssl_cafile:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: enabled
          x-display-name: SSL CA File
        ssl_certificate:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: enabled
        tls_tickets:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            ssl:
              value: enabled
        verify:
          enum:
          - none
          - required
          type: string
          x-dependency:
            ssl:
              value: enabled
        weight:
          nullable: true
          type: integer
      required:
      - name
      title: Server
      type: object
    servers:
      description: HAProxy backend servers array
      items:
        $ref: '#/components/schemas/server'
      title: Servers
      type: array
    http_request_rule:
      additionalProperties: false
      description: HAProxy HTTP request rule configuration (corresponds to http-request
        directives)
      example:
        cond: unless
        cond_test: '{ src 192.168.0.0/16 }'
        hdr_format: '%T'
        hdr_name: X-Haproxy-Current-Date
        id: 0
        type: add-header
      properties:
        acl_file:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-acl
              - del-acl
          x-display-name: ACL File
        acl_keyfmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-acl
              - del-acl
          x-display-name: ACL Key Format
        auth_realm:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: auth
          x-display-name: Authentication Realm
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        deny_status:
          nullable: false
          type: integer
          x-dependency:
            type:
              value:
              - deny
              - tarpit
        hdr_format:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - replace-header
              - replace-value
              - set-header
              - add-header
          x-display-name: Header Format
        hdr_match:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - replace-header
              - replace-value
          x-display-name: Header Match
        hdr_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-header
              - replace-header
              - del-header
              - set-header
              - replace-value
          x-display-name: Header Name
        id:
          nullable: true
          type: integer
        log_level:
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
          type: string
          x-dependency:
            type:
              required: true
              value: set-log-level
        query-fmt:
          type: string
          x-dependency:
            type:
              required: true
              value: set-query
        redir_code:
          enum:
          - 301
          - 302
          - 303
          type: integer
          x-dependency:
            type:
              value: redirect
          x-display-name: Redirect Code
        redir_option:
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Option
        redir_type:
          enum:
          - location
          - prefix
          - scheme
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Type
        redir_value:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Value
        spoe_engine:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: send-spoe-group
          x-display-name: SPOE Engine
        spoe_group:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: send-spoe-group
          x-display-name: SPOE Group
        type:
          enum:
          - allow
          - deny
          - auth
          - redirect
          - tarpit
          - add-header
          - replace-header
          - replace-value
          - del-header
          - set-header
          - set-log-level
          - set-query
          - set-uri
          - set-var
          - send-spoe-group
          - add-acl
          - del-acl
          nullable: false
          type: string
        uri-fmt:
          type: string
          x-dependency:
            type:
              required: true
              value: set-uri
        var_expr:
          type: string
          x-dependency:
            type:
              required: true
              value: set-var
          x-display-name: Var Expression
        var_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: set-var
        var_scope:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: set-var
      required:
      - id
      - type
      title: HTTP Request Rule
      type: object
    http_request_rules:
      description: HAProxy HTTP request rules array (corresponds to http-request directives)
      items:
        $ref: '#/components/schemas/http_request_rule'
      title: HTTP Request Rules Array
      type: array
    http_response_rule:
      additionalProperties: false
      description: HAProxy HTTP response rule configuration (corresponds to http-response
        directives)
      example:
        cond: unless
        cond_test: '{ src 192.168.0.0/16 }'
        hdr_format: '%T'
        hdr_name: X-Haproxy-Current-Date
        id: 0
        type: add-header
      properties:
        acl_file:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-acl
              - del-acl
        acl_keyfmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-acl
              - del-acl
          x-display-name: ACK Key Format
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        hdr_format:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - replace-header
              - replace-value
              - set-header
              - add-header
          x-display-name: Header Format
        hdr_match:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - replace-header
              - replace-value
          x-display-name: Header Match
        hdr_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-header
              - replace-header
              - del-header
              - set-header
              - replace-value
          x-display-name: Header Name
        id:
          nullable: true
          type: integer
        log_level:
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
          type: string
          x-dependency:
            type:
              required: true
              value: set-log-level
        redir_code:
          enum:
          - 301
          - 302
          - 303
          type: integer
          x-dependency:
            type:
              value: redirect
          x-display-name: Redirect Code
        redir_option:
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Option
        redir_type:
          enum:
          - location
          - prefix
          - scheme
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Type
        redir_value:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Value
        spoe_engine:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: send-spoe-group
        spoe_group:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: send-spoe-group
        status:
          maximum: 999
          minimum: 100
          nullable: false
          type: integer
          x-dependency:
            type:
              required: true
              value: set-status
        status_reason:
          type: string
          x-dependency:
            type:
              value: set-status
        type:
          enum:
          - allow
          - deny
          - redirect
          - add-header
          - set-header
          - del-header
          - set-log-level
          - set-var
          - set-status
          - send-spoe-group
          - replace-header
          - replace-value
          - add-acl
          - del-acl
          nullable: false
          type: string
        var_expr:
          type: string
          x-dependency:
            type:
              required: true
              value: set-var
          x-display-name: Var Expression
        var_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: set-var
        var_scope:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: set-var
      required:
      - id
      - type
      title: HTTP Response Rule
      type: object
    http_response_rules:
      description: HAProxy HTTP response rules array (corresponds to http-response
        directives)
      items:
        $ref: '#/components/schemas/http_response_rule'
      title: HTTP Response Rules Array
      type: array
    tcp_request_rule:
      additionalProperties: false
      description: HAProxy TCP Request Rule configuration (corresponds to tcp-request)
      example:
        cond: if
        cond_test: '{ src 192.168.0.0/16 }'
        id: 0
        type: accept
      properties:
        action:
          enum:
          - accept
          - reject
          nullable: false
          type: string
          x-dependency:
            type:
              required: true
              value:
              - connection
              - content
              - session
        cond:
          enum:
          - if
          - unless
          type: string
          x-dependency:
            type:
              value:
              - connection
              - content
              - session
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
            type:
              required: true
              value:
              - connection
              - content
              - session
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        id:
          nullable: true
          type: integer
        timeout:
          nullable: true
          type: integer
          x-dependency:
            type:
              required: true
              value: inspect-delay
        type:
          enum:
          - connection
          - content
          - inspect-delay
          - session
          nullable: false
          type: string
      required:
      - id
      - type
      title: TCP Request Rule
      type: object
    tcp_request_rules:
      description: HAProxy TCP request rules array (corresponds to tcp-request directive)
      items:
        $ref: '#/components/schemas/tcp_request_rule'
      title: TCP Request Rules Array
      type: array
    tcp_response_rule:
      additionalProperties: false
      description: HAProxy TCP Response Rule configuration (corresponds to tcp-response)
      example:
        cond: if
        cond_test: '{ src 192.168.0.0/16 }'
        id: 0
        type: accept
      properties:
        action:
          enum:
          - accept
          - reject
          nullable: false
          type: string
          x-dependency:
            type:
              required: true
              value: content
        cond:
          enum:
          - if
          - unless
          type: string
          x-dependency:
            type:
              value: content
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
            type:
              value: content
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        id:
          nullable: true
          type: integer
        timeout:
          nullable: true
          type: integer
          x-dependency:
            type:
              required: true
              value: inspect-delay
        type:
          enum:
          - content
          - inspect-delay
          nullable: false
          type: string
      required:
      - id
      - type
      title: TCP Response Rule
      type: object
    tcp_response_rules:
      description: HAProxy TCP response rules array (corresponds to tcp-response directive)
      items:
        $ref: '#/components/schemas/tcp_response_rule'
      title: TCP Response Rules Array
      type: array
    backend_switching_rule:
      additionalProperties: false
      description: HAProxy backend switching rule configuration (corresponds to use_backend
        directive)
      example:
        cond: if
        cond_test: '{ req_ssl_sni -i www.example.com }'
        id: 0
        name: test_backend
      properties:
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        id:
          nullable: true
          type: integer
        name:
          nullable: false
          pattern: ^[^\s]+$
          type: string
          x-display-name: Backend Name
          x-dynamic-enum:
            operation: getBackends
            property: name
      required:
      - id
      - name
      title: Backend Switching Rule
      type: object
    backend_switching_rules:
      description: HAProxy backend switching rules array (corresponds to use_backend
        directives)
      items:
        $ref: '#/components/schemas/backend_switching_rule'
      title: Backend Switching Rules Array
      type: array
    server_switching_rule:
      additionalProperties: false
      description: HAProxy server switching rule configuration (corresponds to use-server
        directive)
      example:
        cond: if
        cond_test: '{ req_ssl_sni -i www.example.com }'
        id: 0
        target_server: www
      properties:
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        id:
          nullable: true
          type: integer
        target_server:
          nullable: false
          pattern: ^[^\s]+$
          type: string
          x-dynamic-enum:
            operation: getServers
            property: name
      required:
      - id
      - target_server
      title: Server Switching Rule
      type: object
    server_switching_rules:
      description: HAProxy backend server switching rules array (corresponds to use-server
        directives)
      items:
        $ref: '#/components/schemas/server_switching_rule'
      title: Server Switching Rules Array
      type: array
    filter:
      additionalProperties: false
      description: HAProxy filters
      example:
        id: 0
        trace_name: name
        trace_rnd_parsing: true
        type: trace
      properties:
        cache_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: cache
        id:
          nullable: true
          type: integer
        spoe_config:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: spoe
        spoe_engine:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: spoe
        trace_hexdump:
          type: boolean
          x-dependency:
            type:
              value: trace
        trace_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: trace
        trace_rnd_forwarding:
          type: boolean
          x-dependency:
            type:
              value: trace
          x-display-name: Trace Random Forwarding
        trace_rnd_parsing:
          type: boolean
          x-dependency:
            type:
              value: trace
          x-display-name: Trace Random Parsing
        type:
          enum:
          - trace
          - compression
          - spoe
          - cache
          nullable: false
          type: string
      required:
      - id
      - type
      title: Filter
      type: object
    filters:
      description: HAProxy filters array (corresponds to filter directive)
      items:
        $ref: '#/components/schemas/filter'
      title: Filters Array
      type: array
    stick_rule:
      additionalProperties: false
      description: Define a pattern used to create an entry in a stickiness table
        or matching condition or associate a user to a server.
      example:
        id: 0
        pattern: src
        type: storeonly
      properties:
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        id:
          nullable: true
          type: integer
        pattern:
          nullable: false
          pattern: ^[^\s]+$
          type: string
        table:
          pattern: ^[^\s]+$
          type: string
        type:
          enum:
          - match
          - on
          - store-request
          - store-response
          nullable: false
          type: string
      required:
      - id
      - pattern
      - type
      title: Stick Rule
      type: object
    stick_rules:
      description: HAProxy backend stick rules array (corresponds to stick store-request,
        stick match, stick on, stick store-response)
      items:
        $ref: '#/components/schemas/stick_rule'
      title: Stick Rules Array
      type: array
    log_target:
      additionalProperties: false
      description: Per-instance logging of events and traffic.
      example:
        nolog: true
        address: address
        level: emerg
        minlevel: emerg
        format: rfc3164
        length: 1
        global: true
        id: 6
        facility: kern
      properties:
        address:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            global:
              required: true
              value: false
            nolog:
              required: true
              value: false
        facility:
          enum:
          - kern
          - user
          - mail
          - daemon
          - auth
          - syslog
          - lpr
          - news
          - uucp
          - cron
          - auth2
          - ftp
          - ntp
          - audit
          - alert
          - cron2
          - local0
          - local1
          - local2
          - local3
          - local4
          - local5
          - local6
          - local7
          type: string
          x-dependency:
            global:
              required: true
              value: false
            nolog:
              required: true
              value: false
        format:
          enum:
          - rfc3164
          - rfc5424
          - short
          - raw
          type: string
          x-dependency:
            global:
              value: false
            nolog:
              value: false
        global:
          type: boolean
        id:
          nullable: true
          type: integer
        length:
          type: integer
          x-dependency:
            global:
              value: false
            nolog:
              value: false
        level:
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          type: string
          x-dependency:
            global:
              value: false
            nolog:
              value: false
        minlevel:
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          type: string
          x-dependency:
            global:
              value: false
            level:
              required: false
            nolog:
              value: false
        nolog:
          type: boolean
      required:
      - id
      title: Log Target
      type: object
    log_targets:
      description: HAProxy log target array (corresponds to log directives)
      items:
        $ref: '#/components/schemas/log_target'
      title: Log Target Array
      type: array
    acl:
      additionalProperties: false
      description: |
        The use of Access Control Lists (ACL) provides a flexible solution to perform
        content switching and generally to take decisions based on content extracted
        from the request, the response or any environmental status.
      example:
        criterion: criterion
        acl_name: acl_name
        id: 6
        value: value
      properties:
        acl_name:
          nullable: false
          pattern: ^[^\s]+$
          type: string
        criterion:
          nullable: false
          pattern: ^[^\s]+$
          type: string
        id:
          nullable: true
          type: integer
        value:
          nullable: false
          type: string
      required:
      - acl_name
      - criterion
      - id
      - value
      title: ACL Lines
      type: object
    acls:
      description: HAProxy ACL lines array (corresponds to acl directives)
      items:
        $ref: '#/components/schemas/acl'
      title: ACL Lines Array
      type: array
    native_stats:
      description: HAProxy stats array
      items:
        description: Stats from one runtime API
        properties:
          error:
            type: string
          runtimeAPI:
            type: string
          stats:
            items:
              $ref: '#/components/schemas/native_stat'
            type: array
        title: Stats collection
        type: object
        x-go-name: NativeStatsCollection
      title: Stats Array
      type: array
      x-go-name: NativeStats
    native_stat:
      description: Current stats for one object.
      example:
        name: frontend_test
        stats:
          bin: 4326578
          bout: 889901290
          comp_byp: 0
          comp_in: 0
          comp_out: 0
          comp_rsp: 0
          conn_rate: 12
          conn_rate_max: 456
          conn_tot: 45682
          dcon: 0
          dreq: 4
          dresp: 1
          dses: 0
          ereq: 54
          hrsp_1xx: 0
          hrsp_2xx: 165
          hrsp_3xx: 12
          hrsp_4xx: 50
          hrsp_5xx: 4
          hrsp_other: 0
          iid: 0
          intercepted: 346
          mode: http
          pid: 3204
          rate: 64
          rate_lim: 20000
          rate_max: 4000
          req_rate: 49
          req_rate_max: 3965
          req_total: 1254786
          scur: 129
          slim: 2000
          smax: 2000
          status: UP
          stot: 12902
        type: frontend
      properties:
        backend_name:
          type: string
          x-dependency:
            type: server
        name:
          type: string
        stats:
          $ref: '#/components/schemas/native_stat_stats'
        type:
          enum:
          - backend
          - server
          - frontend
          type: string
      title: Stats
      type: object
      x-go-name: NativeStat
    error:
      additionalProperties:
        type: string
      description: API Error
      properties:
        code:
          nullable: true
          type: integer
        message:
          nullable: true
          type: string
      required:
      - code
      - message
      title: Error
      type: object
    endpoint:
      description: Endpoint definition
      example:
        description: description
        title: title
        url: url
      properties:
        description:
          description: Endpoint description
          type: string
        title:
          description: Endpoint title
          type: string
        url:
          description: Path to the endpoint
          type: string
      title: Endpoint
      type: object
    endpoints:
      description: Collection of endpoints
      items:
        $ref: '#/components/schemas/endpoint'
      title: Endpoints Array
      type: array
    process_info:
      description: General HAProxy process information
      example:
        haproxy:
          address: 127.0.0.1
          pid: 1234
          processes: 4
          release_date: 2016-03-11
          time: 2018-07-02T12:00:00.124Z
          uptime: 8
          version: 1.7-dev1-868ab3-148
      properties:
        haproxy:
          $ref: '#/components/schemas/process_info_haproxy'
      title: HAProxy Information
      type: object
    transaction:
      description: HAProxy configuration transaction
      example:
        _version: 2
        id: 273e3385-2d0c-4fb1-aa27-93cbb31ff203
        status: in_progress
      properties:
        _version:
          type: integer
        id:
          pattern: ^[^\s]+$
          type: string
        status:
          enum:
          - failed
          - in_progress
          - success
          type: string
      title: Configuration transaction
      type: object
    transactions:
      description: Configuration transactions array
      items:
        $ref: '#/components/schemas/transaction'
      title: Transactions array
      type: array
    info:
      description: General API, OS and hardware information
      example:
        api:
          build_date: 2019-08-21T17:31:56.000Z
          version: v1.2.1 45a3288.dev
        system:
          cpu_info:
            model: Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz
            num_cpus: 4
          hostname: test
          mem_info:
            dataplaneapi_memory: 44755536
            free_memory: 5790642176
            total_memory: 16681517056
          os_string: 'Linux 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC
            2019'
          time: 1566401525
          uptime: 87340
      properties:
        api:
          $ref: '#/components/schemas/info_api'
        system:
          $ref: '#/components/schemas/info_system'
      title: Information
      type: object
    reload:
      description: HAProxy reload
      example:
        id: 2019-01-03-44
        status: in_progress
      properties:
        id:
          pattern: ^\d{4}-\d{2}-\d{2}-\d+$
          type: string
        reload_timestamp:
          type: integer
        response:
          type: string
        status:
          enum:
          - failed
          - in_progress
          - succeeded
          type: string
      title: HAProxy reload
      type: object
    reloads:
      description: HAProxy reloads array
      items:
        $ref: '#/components/schemas/reload'
      title: HAProxy Reloads Array
      type: array
    balance:
      example:
        arguments:
        - arguments
        - arguments
        algorithm: roundrobin
      properties:
        algorithm:
          enum:
          - roundrobin
          - static-rr
          - leastconn
          - first
          - source
          - uri
          - url_param
          - random
          type: string
        arguments:
          items:
            pattern: ^[^\s]+$
            type: string
          type: array
          x-dependency:
            algorithm:
              value:
              - uri
              - url_param
      type: object
    forwardfor:
      example:
        ifnone: true
        header: header
        except: except
        enabled: enabled
      properties:
        enabled:
          enum:
          - enabled
          type: string
        except:
          pattern: ^[^\s]+$
          type: string
        header:
          pattern: ^[^\s]+$
          type: string
        ifnone:
          type: boolean
      required:
      - enabled
      type: object
      x-display-name: ForwardFor
    default_server:
      example:
        fall: 5
        port: 46276
        inter: 2
        rise: 9
      properties:
        fall:
          nullable: true
          type: integer
        inter:
          nullable: true
          type: integer
        port:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        rise:
          nullable: true
          type: integer
      type: object
    httpchk:
      example:
        method: HEAD
        uri: uri
        version: version
      properties:
        method:
          enum:
          - HEAD
          - PUT
          - POST
          - GET
          - TRACE
          - PATCH
          type: string
        uri:
          pattern: ^[^\s]+$
          type: string
        version:
          pattern: ^[^\s]+$
          type: string
      type: object
      x-display-name: HTTP Check
    redispatch:
      example:
        interval: 1
        enabled: enabled
      properties:
        enabled:
          enum:
          - enabled
          - disabled
          type: string
        interval:
          nullable: false
          type: integer
      required:
      - enabled
      type: object
    errorfile:
      example:
        code: 3
        file: file
      properties:
        code:
          enum:
          - 200
          - 400
          - 403
          - 405
          - 408
          - 425
          - 429
          - 500
          - 502
          - 503
          - 504
          type: integer
        file:
          type: string
      type: object
      x-display-name: Error File
    inline_response_200:
      example:
        data:
        - farms:
          - balance:
              algorithm: roundrobin
            mode: http
            name: www_backend
            servers:
            - address: 127.0.1.1
              name: www_server
              port: 4567
              weight: 30
            - address: 127.0.1.2
              name: www_server_new
              port: 4567
              weight: 70
            use_as: default
          name: test_site
          service:
            http_connection_mode: httpclose
            listeners:
            - address: 127.0.0.1
              name: test_listener
              port: 80
            - address: 127.0.0.1
              name: test_listener_2
              port: 8080
            maxconn: 2000
            mode: http
        - farms:
          - balance:
              algorithm: roundrobin
            mode: http
            name: www_backend
            servers:
            - address: 127.0.1.1
              name: www_server
              port: 4567
              weight: 30
            - address: 127.0.1.2
              name: www_server_new
              port: 4567
              weight: 70
            use_as: default
          name: test_site
          service:
            http_connection_mode: httpclose
            listeners:
            - address: 127.0.0.1
              name: test_listener
              port: 80
            - address: 127.0.0.1
              name: test_listener_2
              port: 8080
            maxconn: 2000
            mode: http
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: |
            Sites array. Sites are considered as one service and all farms connected to that service.
            Farms are connected to service using use-backend and default_backend directives. Sites let you
            configure simple HAProxy configurations, for more advanced options use /haproxy/configuration
            endpoints.
          items:
            $ref: '#/components/schemas/site'
          title: Sites
          type: array
      required:
      - data
    inline_response_200_1:
      example:
        data:
          farms:
          - balance:
              algorithm: roundrobin
            mode: http
            name: www_backend
            servers:
            - address: 127.0.1.1
              name: www_server
              port: 4567
              weight: 30
            - address: 127.0.1.2
              name: www_server_new
              port: 4567
              weight: 70
            use_as: default
          name: test_site
          service:
            http_connection_mode: httpclose
            listeners:
            - address: 127.0.0.1
              name: test_listener
              port: 80
            - address: 127.0.0.1
              name: test_listener_2
              port: 8080
            maxconn: 2000
            mode: http
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/site'
    inline_response_200_2:
      example:
        data:
          external_check: true
          nbproc: 1
          maxconn: 6
          stats_timeout: 5
          cpu_maps:
          - process: process
            cpu_set: cpu_set
          - process: process
            cpu_set: cpu_set
          daemon: enabled
          pidfile: pidfile
          tune_ssl_default_dh_param: 2
          ssl_default_bind_options: ssl_default_bind_options
          master-worker: true
          runtime_apis:
          - mode: mode
            process: process
            address: address
            level: user
            exposeFdListeners: true
          - mode: mode
            process: process
            address: address
            level: user
            exposeFdListeners: true
          nbthread: 5
          ssl_default_bind_ciphers: ssl_default_bind_ciphers
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/global'
    inline_response_200_3:
      example:
        data:
          external_check_path: external_check_path
          redispatch:
            interval: 1
            enabled: enabled
          log_format: log_format
          external_check_command: external_check_command
          connect_timeout: 5
          maxconn: 7
          http_request_timeout: 4
          default_backend: default_backend
          httpchk:
            method: HEAD
            uri: uri
            version: version
          mode: tcp
          dontlognull: enabled
          forwardfor:
            ifnone: true
            header: header
            except: except
            enabled: enabled
          log_format_sd: log_format_sd
          balance:
            arguments:
            - arguments
            - arguments
            algorithm: roundrobin
          http-use-htx: enabled
          log_separate_errors: enabled
          clflog: true
          tcplog: true
          client_timeout: 1
          external_check: enabled
          queue_timeout: 1
          clitcpka: enabled
          cookie: cookie
          http_keep_alive_timeout: 2
          default_server:
            fall: 5
            port: 46276
            inter: 2
            rise: 9
          httplog: true
          contstats: enabled
          server_timeout: 6
          http_connection_mode: httpclose
          retries: 1
          http_pretend_keepalive: enabled
          check_timeout: 6
          error_files:
          - code: 3
            file: file
          - code: 3
            file: file
          log_tag: log_tag
          adv_check: ssl-hello-chk
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/defaults'
    inline_response_200_4:
      example:
        data:
        - default_backend: test_backend
          http_connection_mode: http-keep-alive
          maxconn: 2000
          mode: http
          name: test_frontend
        - default_backend: test_backend
          http_connection_mode: http-keep-alive
          maxconn: 2000
          mode: http
          name: test_frontend
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy frontends array
          items:
            $ref: '#/components/schemas/frontend'
          title: Frontends
          type: array
      required:
      - data
    inline_response_200_5:
      example:
        data:
          default_backend: test_backend
          http_connection_mode: http-keep-alive
          maxconn: 2000
          mode: http
          name: test_frontend
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/frontend'
    inline_response_200_6:
      example:
        data:
        - balance:
            algorithm: roundrobin
          forwardfor:
            enabled: true
          httpchk:
            method: OPTIONS
            uri: /check
            version: HTTP/1.1
          mode: http
          name: test_backend
        - balance:
            algorithm: roundrobin
          forwardfor:
            enabled: true
          httpchk:
            method: OPTIONS
            uri: /check
            version: HTTP/1.1
          mode: http
          name: test_backend
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy backends array
          items:
            $ref: '#/components/schemas/backend'
          title: Backends
          type: array
      required:
      - data
    inline_response_200_7:
      example:
        data:
          balance:
            algorithm: roundrobin
          forwardfor:
            enabled: true
          httpchk:
            method: OPTIONS
            uri: /check
            version: HTTP/1.1
          mode: http
          name: test_backend
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/backend'
    inline_response_200_8:
      example:
        data:
        - address: 127.0.0.1
          name: http
          port: 80
        - address: 127.0.0.1
          name: http
          port: 80
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy frontend binds array (corresponds to bind directives)
          items:
            $ref: '#/components/schemas/bind'
          title: Binds
          type: array
      required:
      - data
    inline_response_200_9:
      example:
        data:
          address: 127.0.0.1
          name: http
          port: 80
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/bind'
    inline_response_200_10:
      example:
        data:
        - address: 10.1.1.1
          check: enabled
          max-connections: 500
          name: www
          port: 8080
          weight: 80
        - address: 10.1.1.1
          check: enabled
          max-connections: 500
          name: www
          port: 8080
          weight: 80
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy backend servers array
          items:
            $ref: '#/components/schemas/server'
          title: Servers
          type: array
      required:
      - data
    inline_response_200_11:
      example:
        data:
          address: 10.1.1.1
          check: enabled
          max-connections: 500
          name: www
          port: 8080
          weight: 80
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/server'
    inline_response_200_12:
      example:
        data:
        - cond: unless
          cond_test: '{ src 192.168.0.0/16 }'
          hdr_format: '%T'
          hdr_name: X-Haproxy-Current-Date
          id: 0
          type: add-header
        - cond: unless
          cond_test: '{ src 192.168.0.0/16 }'
          hdr_format: '%T'
          hdr_name: X-Haproxy-Current-Date
          id: 0
          type: add-header
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy HTTP request rules array (corresponds to http-request
            directives)
          items:
            $ref: '#/components/schemas/http_request_rule'
          title: HTTP Request Rules Array
          type: array
      required:
      - data
    inline_response_200_13:
      example:
        data:
          cond: unless
          cond_test: '{ src 192.168.0.0/16 }'
          hdr_format: '%T'
          hdr_name: X-Haproxy-Current-Date
          id: 0
          type: add-header
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/http_request_rule'
    inline_response_200_14:
      example:
        data:
        - cond: unless
          cond_test: '{ src 192.168.0.0/16 }'
          hdr_format: '%T'
          hdr_name: X-Haproxy-Current-Date
          id: 0
          type: add-header
        - cond: unless
          cond_test: '{ src 192.168.0.0/16 }'
          hdr_format: '%T'
          hdr_name: X-Haproxy-Current-Date
          id: 0
          type: add-header
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy HTTP response rules array (corresponds to http-response
            directives)
          items:
            $ref: '#/components/schemas/http_response_rule'
          title: HTTP Response Rules Array
          type: array
      required:
      - data
    inline_response_200_15:
      example:
        data:
          cond: unless
          cond_test: '{ src 192.168.0.0/16 }'
          hdr_format: '%T'
          hdr_name: X-Haproxy-Current-Date
          id: 0
          type: add-header
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/http_response_rule'
    inline_response_200_16:
      example:
        data:
        - cond: if
          cond_test: '{ src 192.168.0.0/16 }'
          id: 0
          type: accept
        - cond: if
          cond_test: '{ src 192.168.0.0/16 }'
          id: 0
          type: accept
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy TCP request rules array (corresponds to tcp-request
            directive)
          items:
            $ref: '#/components/schemas/tcp_request_rule'
          title: TCP Request Rules Array
          type: array
      required:
      - data
    inline_response_200_17:
      example:
        data:
          cond: if
          cond_test: '{ src 192.168.0.0/16 }'
          id: 0
          type: accept
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/tcp_request_rule'
    inline_response_200_18:
      example:
        data:
        - cond: if
          cond_test: '{ src 192.168.0.0/16 }'
          id: 0
          type: accept
        - cond: if
          cond_test: '{ src 192.168.0.0/16 }'
          id: 0
          type: accept
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy TCP response rules array (corresponds to tcp-response
            directive)
          items:
            $ref: '#/components/schemas/tcp_response_rule'
          title: TCP Response Rules Array
          type: array
      required:
      - data
    inline_response_200_19:
      example:
        data:
          cond: if
          cond_test: '{ src 192.168.0.0/16 }'
          id: 0
          type: accept
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/tcp_response_rule'
    inline_response_200_20:
      example:
        data:
        - cond: if
          cond_test: '{ req_ssl_sni -i www.example.com }'
          id: 0
          name: test_backend
        - cond: if
          cond_test: '{ req_ssl_sni -i www.example.com }'
          id: 0
          name: test_backend
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy backend switching rules array (corresponds to use_backend
            directives)
          items:
            $ref: '#/components/schemas/backend_switching_rule'
          title: Backend Switching Rules Array
          type: array
      required:
      - data
    inline_response_200_21:
      example:
        data:
          cond: if
          cond_test: '{ req_ssl_sni -i www.example.com }'
          id: 0
          name: test_backend
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/backend_switching_rule'
    inline_response_200_22:
      example:
        data:
        - cond: if
          cond_test: '{ req_ssl_sni -i www.example.com }'
          id: 0
          target_server: www
        - cond: if
          cond_test: '{ req_ssl_sni -i www.example.com }'
          id: 0
          target_server: www
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy backend server switching rules array (corresponds to
            use-server directives)
          items:
            $ref: '#/components/schemas/server_switching_rule'
          title: Server Switching Rules Array
          type: array
      required:
      - data
    inline_response_200_23:
      example:
        data:
          cond: if
          cond_test: '{ req_ssl_sni -i www.example.com }'
          id: 0
          target_server: www
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/server_switching_rule'
    inline_response_200_24:
      example:
        data:
        - id: 0
          trace_name: name
          trace_rnd_parsing: true
          type: trace
        - id: 0
          trace_name: name
          trace_rnd_parsing: true
          type: trace
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy filters array (corresponds to filter directive)
          items:
            $ref: '#/components/schemas/filter'
          title: Filters Array
          type: array
      required:
      - data
    inline_response_200_25:
      example:
        data:
          id: 0
          trace_name: name
          trace_rnd_parsing: true
          type: trace
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/filter'
    inline_response_200_26:
      example:
        data:
        - id: 0
          pattern: src
          type: storeonly
        - id: 0
          pattern: src
          type: storeonly
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy backend stick rules array (corresponds to stick store-request,
            stick match, stick on, stick store-response)
          items:
            $ref: '#/components/schemas/stick_rule'
          title: Stick Rules Array
          type: array
      required:
      - data
    inline_response_200_27:
      example:
        data:
          id: 0
          pattern: src
          type: storeonly
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/stick_rule'
    inline_response_200_28:
      example:
        data:
        - nolog: true
          address: address
          level: emerg
          minlevel: emerg
          format: rfc3164
          length: 1
          global: true
          id: 6
          facility: kern
        - nolog: true
          address: address
          level: emerg
          minlevel: emerg
          format: rfc3164
          length: 1
          global: true
          id: 6
          facility: kern
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy log target array (corresponds to log directives)
          items:
            $ref: '#/components/schemas/log_target'
          title: Log Target Array
          type: array
      required:
      - data
    inline_response_200_29:
      example:
        data:
          nolog: true
          address: address
          level: emerg
          minlevel: emerg
          format: rfc3164
          length: 1
          global: true
          id: 6
          facility: kern
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/log_target'
    inline_response_200_30:
      example:
        data:
        - criterion: criterion
          acl_name: acl_name
          id: 6
          value: value
        - criterion: criterion
          acl_name: acl_name
          id: 6
          value: value
        _version: 0
      properties:
        _version:
          type: integer
        data:
          description: HAProxy ACL lines array (corresponds to acl directives)
          items:
            $ref: '#/components/schemas/acl'
          title: ACL Lines Array
          type: array
      required:
      - data
    inline_response_200_31:
      example:
        data:
          criterion: criterion
          acl_name: acl_name
          id: 6
          value: value
        _version: 0
      properties:
        _version:
          type: integer
        data:
          $ref: '#/components/schemas/acl'
    inline_response_200_32:
      example:
        data: data
        _version: 0
      properties:
        _version:
          type: integer
        data:
          type: string
      required:
      - data
    site_farms:
      properties:
        balance:
          $ref: '#/components/schemas/balance'
        cond:
          enum:
          - if
          - unless
          type: string
          x-dependency:
            use_as:
              required: true
              value: conditional
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            use_as:
              required: true
              value: conditional
          x-display-name: Condition Test
        forwardfor:
          $ref: '#/components/schemas/forwardfor'
        mode:
          enum:
          - http
          - tcp
          type: string
        name:
          nullable: false
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
        servers:
          items:
            $ref: '#/components/schemas/server'
          type: array
        use_as:
          enum:
          - default
          - conditional
          nullable: false
          type: string
      required:
      - name
      - use_as
    site_service:
      properties:
        http_connection_mode:
          enum:
          - http-tunnel
          - httpclose
          - forced-close
          - http-server-close
          - http-keep-alive
          type: string
          x-dependency:
            mode:
              value: http
          x-display-name: HTTP Connection Mode
        listeners:
          items:
            $ref: '#/components/schemas/bind'
          type: array
        maxconn:
          nullable: true
          type: integer
          x-display-name: Max Connections
        mode:
          enum:
          - http
          - tcp
          type: string
    global_cpu_maps:
      example:
        process: process
        cpu_set: cpu_set
      properties:
        cpu_set:
          type: string
          x-display-name: CPU Set
        process:
          type: string
          x-display-name: Process/Thread Set
      required:
      - cpu_set
      - process
    global_runtime_apis:
      example:
        mode: mode
        process: process
        address: address
        level: user
        exposeFdListeners: true
      properties:
        address:
          pattern: ^[^\s]+$
          type: string
        exposeFdListeners:
          type: boolean
          x-display-name: Expose FD Listeners
        level:
          enum:
          - user
          - operator
          - admin
          type: string
        mode:
          pattern: ^[^\s]+$
          type: string
        process:
          pattern: ^[^\s]+$
          type: string
      required:
      - address
    backend_hash_type:
      properties:
        function:
          enum:
          - sdbm
          - djb2
          - wt6
          - crc32
          type: string
        method:
          enum:
          - map-based
          - consistent
          type: string
        modifier:
          enum:
          - avalanche
          type: string
    backend_stick_table:
      properties:
        expire:
          nullable: true
          type: integer
        keylen:
          nullable: true
          type: integer
          x-display-name: Key Length
        nopurge:
          type: boolean
          x-display-name: No Purge
        peers:
          pattern: ^[^\s]+$
          type: string
        size:
          nullable: true
          type: integer
        store:
          pattern: ^[^\s]+$
          type: string
        type:
          enum:
          - ip
          - ipv6
          - integer
          - string
          - binary
          type: string
    native_stat_stats:
      properties:
        act:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        addr:
          type: string
          x-dependency:
            type: server
        agent_code:
          nullable: true
          type: integer
          x-dependency:
            type: server
        agent_desc:
          type: string
          x-dependency:
            type: server
        agent_duration:
          nullable: true
          type: integer
          x-dependency:
            type: server
        agent_fall:
          nullable: true
          type: integer
          x-dependency:
            type: server
        agent_health:
          nullable: true
          type: integer
          x-dependency:
            type: server
        agent_rise:
          nullable: true
          type: integer
          x-dependency:
            type: server
        agent_status:
          enum:
          - UNK
          - INI
          - SOCKERR
          - L40K
          - L4TOUT
          - L4CON
          - L7OK
          - L7STS
          type: string
          x-dependency:
            type: server
        algo:
          type: string
          x-dependency:
            type: backend
        bck:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        bin:
          nullable: true
          type: integer
        bout:
          nullable: true
          type: integer
        check_code:
          nullable: true
          type: integer
          x-dependency:
            type: server
        check_desc:
          type: string
          x-dependency:
            type: server
        check_duration:
          nullable: true
          type: integer
          x-dependency:
            type: server
        check_fall:
          nullable: true
          type: integer
          x-dependency:
            type: server
        check_health:
          nullable: true
          type: integer
          x-dependency:
            type: server
        check_rise:
          nullable: true
          type: integer
          x-dependency:
            type: server
        check_status:
          enum:
          - UNK
          - INI
          - SOCKERR
          - L40K
          - L4TOUT
          - L4CON
          - L6OK
          - L6TOUT
          - L6RSP
          - L7OK
          - L7OKC
          - L7TOUT
          - L7RSP
          - L7STS
          type: string
          x-dependency:
            type: server
        chkdown:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        chkfail:
          nullable: true
          type: integer
          x-dependency:
            type: server
        cli_abrt:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        comp_byp:
          nullable: true
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
        comp_in:
          nullable: true
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
        comp_out:
          nullable: true
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
        comp_rsp:
          nullable: true
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
        conn_rate:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        conn_rate_max:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        conn_tot:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        cookie:
          type: string
          x-dependency:
            type:
            - server
            - backend
        ctime:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        dcon:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        downtime:
          nullable: true
          type: integer
          x-dependency:
            type: server
        dreq:
          nullable: true
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
        dresp:
          nullable: true
          type: integer
        dses:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        econ:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        ereq:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        eresp:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        hanafail:
          type: string
          x-dependency:
            type: server
        hrsp_1xx:
          nullable: true
          type: integer
        hrsp_2xx:
          nullable: true
          type: integer
        hrsp_3xx:
          nullable: true
          type: integer
        hrsp_4xx:
          nullable: true
          type: integer
        hrsp_5xx:
          nullable: true
          type: integer
        hrsp_other:
          nullable: true
          type: integer
        iid:
          nullable: true
          type: integer
        intercepted:
          nullable: true
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
        lastchg:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        lastsess:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        lbtot:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        mode:
          enum:
          - tcp
          - http
          - health
          - unknown
          type: string
        pid:
          nullable: true
          type: integer
        qcur:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        qlimit:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        qmax:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        qtime:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        rate:
          nullable: true
          type: integer
        rate_lim:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        rate_max:
          nullable: true
          type: integer
        req_rate:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        req_rate_max:
          nullable: true
          type: integer
          x-dependency:
            type: frontend
        req_tot:
          nullable: true
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
        rtime:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        scur:
          nullable: true
          type: integer
        sid:
          nullable: true
          type: integer
          x-dependency:
            type: server
        slim:
          nullable: true
          type: integer
        smax:
          nullable: true
          type: integer
        srv_abrt:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        status:
          enum:
          - UP
          - DOWN
          - NOLB
          - MAINT
          - no check
          type: string
        stot:
          nullable: true
          type: integer
        throttle:
          nullable: true
          type: integer
          x-dependency:
            type: server
        tracked:
          nullable: true
          type: integer
          x-dependency:
            type: server
        ttime:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        weight:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        wredis:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
        wretr:
          nullable: true
          type: integer
          x-dependency:
            type:
            - server
            - backend
    process_info_haproxy:
      properties:
        pid:
          description: Process id of the replying worker process
          nullable: true
          type: integer
        processes:
          description: Number of spawned processes
          nullable: true
          type: integer
        release_date:
          description: HAProxy version release date
          format: date
          type: string
        uptime:
          description: HAProxy uptime in s
          nullable: true
          type: integer
        version:
          description: HAProxy version string
          type: string
    info_api:
      properties:
        build_date:
          description: HAProxy Dataplane API build date
          format: date-time
          type: string
        version:
          description: HAProxy Dataplane API version string
          type: string
    info_system_cpu_info:
      properties:
        model:
          type: string
        num_cpus:
          description: Number of logical CPUs
          type: integer
    info_system_mem_info:
      properties:
        dataplaneapi_memory:
          type: integer
        free_memory:
          type: integer
        total_memory:
          type: integer
    info_system:
      properties:
        cpu_info:
          $ref: '#/components/schemas/info_system_cpu_info'
        hostname:
          description: Hostname where the HAProxy is running
          type: string
        mem_info:
          $ref: '#/components/schemas/info_system_mem_info'
        os_string:
          description: OS string
          type: string
        time:
          description: Current time in milliseconds since Epoch.
          type: integer
        uptime:
          description: System uptime
          nullable: true
          type: integer
  securitySchemes:
    basic_auth:
      scheme: basic
      type: http
